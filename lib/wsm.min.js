WSM=function(e,o){function n(){var e;e="https:"===location.protocol?"wss":"ws",t.ws=new WebSocket(e+"://"+location.hostname+":"+location.port),t.ws.onopen=function(e){t.send("connected","WSM: Browser confirms websocket connection."),c(t)},t.ws.onmessage=function(e){t.processMessage(JSON.parse(e.data))},t.ws.onclose=function(e){n()}}var s,t=this,c=function(e){},r=Array.prototype.slice.call(arguments);0===r.length||(r.length>2?console.error("WSM only takes TWO arguments"):r.forEach(function(e){"function"==typeof e?c=e:s||null==e||"object"!=typeof e||(s=e)}));var i={};if(this.wss,this.ws,this.broadcast=function(e,o){isNode?console.log("server never got any client yet."):console.log("client is not able to broadcast.")},isNode){"object"!=typeof s&&console.error('WSM does not receive enough info to build. Either "{server:server}" or "{port:8080}" should pass as an argument.');var a=require("ws");t.wss=new a.Server(s),t.wss&&console.log("create a WebSocket server."),t.wss.on("connection",function(e){console.log(e._socket.remoteAddress+" connected through websocket at "+(new Date).toLocaleString("en-us",{timeZone:"America/New_York"})),t.ws=e,c(t),t.ws.on("message",function(e){t.processMessage(JSON.parse(e))}),t.send("connected","WSM: Server confirms websocket connection."),t.broadcast=function(e,o){var n={};n.type=e,n.content=o,t.wss.clients.length>0&&t.wss.clients.forEach(function(e){e.send(JSON.stringify(n))})},t.wss.broadcast=t.broadcast})}else n();this.addHandler=function(e,o){i[e]=o},this.on=function(e,o){i[e]=o},this.deleteHandler=function(e){return void 0!==i[e]&&(delete i[e],!0)},this.del=function(e){return void 0!==i[e]&&(delete i[e],!0)},this.handlerList=function(){return Object.keys(i)},this.processMessage=function(e){i[e.type](e.content)},this.send=function(e,o){var n={};n.type=e,n.content=o,t.ws.send(JSON.stringify(n))},this.on("connected",function(e){console.log(e)}),this.on("any",function(e){console.log(e)})};var isNode=!("undefined"==typeof process||!process.versions||!process.versions.node);isNode&&(module.exports=WSM);